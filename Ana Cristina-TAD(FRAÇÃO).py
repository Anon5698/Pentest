#AC Ana Cristina
'''
Aluno:Pedro Caã Cordeiro Xavier_RA:1701453_Curso:ADS
'''
#Calcular MMC
#Retorno de Máximo Divisor Comum
#Algoritmo de Euclides
class MDC:
    def mdc(a, b):
    ''' (int, int) -> int
    recebe dois inteiros diferentes de zero e retorna o maximo
    divisor comum entre a e b'''
        if b == 0: return a
        if a == 0: return b
        while a%b != 0:
    a,b=b,a%b
    return b

#Classe da TAD(Tipo Abstrato de Dados)!!!
class Fracao:
    def __init__(self, num, den):
        self.num = num
        self.den = den
        
    def __add__(self, f):
        den = self.den * f.den
        num = self.num * f.den + self.den * f.num
        return (Fracao(num, den).simplifica())
        
    def __mul__(self, f):
        num = self.num * f.num
        den = self.den * f.den
        return (Fracao(num, den).simplifica())

    def __sub__(self, f):
        den = self.den * f.den
        num = self.num * f.den - self.den * f.num
        return (Fracao(num, den).simplifica())
        
            
    def __str__(self):
        if self.num == 0:
            return "0"
        elif self.den == 1:
            return str(self.num)
        else:
            return str(self.num)+'/'+ str(self.den)

    def Simplificação(self):
        max = mdc(self.num, self.den)
        self.num = self.num/max
        self.den = self.den /max
        return self

    def Main():
        opcao = int(input(" Digite o Valor da Fração:  "))
        main(opcao)
    
Main()


        

