"""
#CRIANDO UMA LISTA.
#Ips sempre serao strings em Listas.
alvos = ["192.168.1.10","192.168.1.20","192.168.1.30","192.168.1.40"]
#Listas podem conter(numeros,strings,listas dentro delas,boolean,float)
#Qualquer Elemento pode ser listado.
"""
"""
#LENDO UMA LISTA.
#Printar posicao especifica da lista: print(nome da lista[i]),i=indice que e o valor de 0,1,2,3... isso vai mostrar o elemento da lista naquela posicao)
#O indice tambem pode percorrer em sentido oposto, tipo do 0,-1,-2,-3...
print(alvos)
print(alvos[0])
#Usando uma Range, de uma valor ao outro com o uso do(:)
print(alvos[0:2])
"""
"""
#ACESSANDO ELEMENTOS DE UMA LISTA
anon = alvos[0]
print(anon)
"""
"""
#ADICIONANDO ELEMENTO A UMA LISTA
#funcao/metodo append, adiciona ao final da lista
#append aceita(numero,string,boolean,float)
#Outro exemplo: [10,20,30].append(50), aceita qualquer tipo de valor(numero,float,boolean,string,outras listas)
alvos.append("Hackeado")
print(alvos)
"""
"""
#ADICIONANDO VALORES A LISTA.
#funcao/metodo insert, adiciona elementos de acordo com o indice e o valor declarado.
#insert aceita(numero,string,boolean,float)
alvos.insert(0,"Inicio")
print(alvos)
"""
"""
#REMOVENDO VALORES
#funcao/metodo remove, remove elemento da lista,aceita(boolean,strings,numero,outras listas e float)
alvos.remove("192.168.1.30")
print(alvos)
#funcao/metodo pop,nao precisa de valores;remove e armazena o ultimo elemento da lista/salva o valor em uma variavel declarada.
ultimo = alvos.pop()
print(alvos)
print (ultimo)
"""
"""
#CONSULTAR UMA LISTA
#verificar se um valor existe ou nao
#verificar o tipo da lista com a funcao/metodo: print(type(alvos))
print(type(alvos))
#funcao/metodo len, mostra o tamanho da lista(quantidade de elementos)
print(len(alvos))
#Para verificar se o elemento tem ou nao na lista usamos: in ou not in
print("############################")
print("192.168.1.20" in alvos)
print("192.168.1.20000" in alvos)
print("192.168.1.20000" not in alvos)
print("############################")
"""
"""
#CRIANDO TUPLE(LISTA FIXA)
#tuplas sao criadas com: ()
#tuples n√£o tem metodos multaveis(append,insert,remove)
#so tem metodos de leitura e consulta
portas = (80,22,21)
"""


